#!/bin/bash -e

# get the values of $SNAP_DATA and $SNAP using the current symlink instead of
# the default behavior which has the revision hard-coded, which breaks after
# a refresh
SNAP_DATA_CURRENT=${SNAP_DATA/%$SNAP_REVISION/current}
SNAP_CURRENT=${SNAP/%$SNAP_REVISION/current}

# the kong config file needs to be generated with 3 changes from the default one included in the snap
# - we set the prefix to be $SNAP_DATA/kong as an absolute path (note that this has to be done here in the install hook)
# - we set the nginx user to be root
# - we set the database used to cassandra
if [ ! -f "$SNAP_DATA/config/kong.conf" ]; then
    mkdir -p "$SNAP_DATA/config"
    cp "$SNAP/config/kong.conf" "$SNAP_DATA/config/kong.conf"

    # replace the default prefix setting with an absolute path using $SNAP_DATA
    # note that if anyone ever has a "@" in their $SNAP_DATA this will likely fail
    sed -i "s@#prefix = /usr/local/kong/@prefix = $SNAP_DATA_CURRENT@" "$SNAP_DATA/config/kong.conf"

    # also replace the default nginx user/group to be root
    sed -i "s@#nginx_user = nobody nobody@nginx_user = root root@" "$SNAP_DATA/config/kong.conf"
fi

# copy the configuration for luarocks into $SNAP_DATA where it is editable
# and is also bind mounted on top of /etc/luarocks/config.lua inside the snap
# mount namespace
cp "$SNAP/etc/luarocks/config.lua" "$SNAP_DATA/etc/luarocks/config.lua"

# setup postgres db config file with env vars replaced
if [ ! -f "$SNAP_DATA/etc/postgresql/10/main/postgresql.conf" ]; then
    mkdir -p "$SNAP_DATA/etc/postgresql/10/main"
    cp "$SNAP/etc/postgresql/10/main/postgresql.conf" "$SNAP_DATA/etc/postgresql/10/main/postgresql.conf"
    # do replacement of the $SNAP, $SNAP_DATA, $SNAP_COMMON environment variables in the config files
    sed -i -e "s@\$SNAP_COMMON@$SNAP_COMMON@g" \
        -e "s@\$SNAP_DATA@$SNAP_DATA_CURRENT@g" \
        -e "s@\$SNAP@$SNAP_CURRENT@g" \
        "$SNAP_DATA/etc/postgresql/10/main/postgresql.conf"
fi

# ensure the postgres data directory exists and is owned by snap_daemon
mkdir -p "$SNAP_DATA/postgresql" 
chown -R snap_daemon:snap_daemon "$SNAP_DATA/postgresql" 

# setup the postgres data directory
gosu snap_daemon "$SNAP/usr/lib/postgresql/10/bin/initdb" -D "$SNAP_DATA/postgresql/10/main"

# ensure the sockets dir exists and is properly owned
mkdir -p "$SNAP_COMMON/sockets"
chown -R snap_daemon:snap_daemon "$SNAP_COMMON/sockets" 

# start postgres up and wait a bit for it
snapctl start --enable "$SNAP_NAME.postgres"
sleep 2

# add a kong user and database in postgres - note we have to run these through
# the psql-wrapper scripts to setup env vars properly
gosu snap_daemon "$SNAP/bin/psql-wrapper.sh" "$SNAP/usr/bin/createuser" kong
gosu snap_daemon "$SNAP/bin/psql-wrapper.sh" "$SNAP/usr/bin/createdb" kong

# we use postgres by default in the snap, but provide cassandra temporarily to 
# allow folks to migrate switch if they want
snapctl stop --disable "$SNAP_NAME.cassandra"
touch "$SNAP_DATA/disable-cassandra"
